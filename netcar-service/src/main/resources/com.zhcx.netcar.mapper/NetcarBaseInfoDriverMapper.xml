<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhcx.netcar.netcarservice.mapper.base.NetcarBaseInfoDriverMapper">
    <resultMap id="BaseResultMap" type="com.zhcx.netcar.pojo.base.NetcarBaseInfoDriver">
        <id column="company_id" jdbcType="VARCHAR" property="companyId"/>
        <id column="license_id" jdbcType="VARCHAR" property="licenseId"/>
        <result column="address" jdbcType="INTEGER" property="address"/>
        <result column="driver_name" jdbcType="VARCHAR" property="driverName"/>
        <result column="driver_phone" jdbcType="VARCHAR" property="driverPhone"/>
        <result column="driver_gender" jdbcType="VARCHAR" property="driverGender"/>
        <result column="driver_birthday" jdbcType="VARCHAR" property="driverBirthday"/>
        <result column="driver_nationality" jdbcType="VARCHAR" property="driverNationality"/>
        <result column="driver_nation" jdbcType="VARCHAR" property="driverNation"/>
        <result column="driver_marital_status" jdbcType="VARCHAR" property="driverMaritalStatus"/>
        <result column="driver_language_level" jdbcType="VARCHAR" property="driverLanguageLevel"/>
        <result column="driver_education" jdbcType="VARCHAR" property="driverEducation"/>
        <result column="driver_census" jdbcType="VARCHAR" property="driverCensus"/>
        <result column="driver_address" jdbcType="VARCHAR" property="driverAddress"/>
        <result column="driver_contact_address" jdbcType="VARCHAR" property="driverContactAddress"/>
        <result column="photo_id" jdbcType="VARCHAR" property="photoId"/>
        <result column="license_photo_id" jdbcType="VARCHAR" property="licensePhotoId"/>
        <result column="driver_type" jdbcType="VARCHAR" property="driverType"/>
        <result column="get_driver_license_date" jdbcType="VARCHAR" property="getDriverLicenseDate"/>
        <result column="driver_license_off" jdbcType="VARCHAR" property="driverLicenseOff"/>
        <result column="driver_license_on" jdbcType="VARCHAR" property="driverLicenseOn"/>
        <result column="taxi_driver" jdbcType="INTEGER" property="taxiDriver"/>
        <result column="certificate_no" jdbcType="VARCHAR" property="certificateNo"/>
        <result column="network_car_issue_organization" jdbcType="VARCHAR" property="networkCarIssueOrganization"/>
        <result column="network_car_issue_date" jdbcType="VARCHAR" property="networkCarIssueDate"/>
        <result column="get_network_car_proof_date" jdbcType="VARCHAR" property="getNetworkCarProofDate"/>
        <result column="network_car_proof_on" jdbcType="VARCHAR" property="networkCarProofOn"/>
        <result column="network_car_proof_off" jdbcType="VARCHAR" property="networkCarProofOff"/>
        <result column="register_date" jdbcType="VARCHAR" property="registerDate"/>
        <result column="full_time_driver" jdbcType="INTEGER" property="fullTimeDriver"/>
        <result column="in_driver_blacklist" jdbcType="INTEGER" property="inDriverBlacklist"/>
        <result column="commercial_type" jdbcType="INTEGER" property="commercialType"/>
        <result column="contract_company" jdbcType="VARCHAR" property="contractCompany"/>
        <result column="contract_on" jdbcType="VARCHAR" property="contractOn"/>
        <result column="contract_off" jdbcType="VARCHAR" property="contractOff"/>
        <result column="emergency_contact" jdbcType="VARCHAR" property="emergencyContact"/>
        <result column="emergency_contact_phone" jdbcType="VARCHAR" property="emergencyContactPhone"/>
        <result column="emergency_contact_address" jdbcType="VARCHAR" property="emergencyContactAddress"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="flag" jdbcType="INTEGER" property="flag"/>
        <result column="update_time" jdbcType="VARCHAR" property="updateTime"/>
        <result column="reserved" jdbcType="VARCHAR" property="reserved"/>
    </resultMap>
    <sql id="Base_Column_List">
    company_id, license_id, address, driver_name, driver_phone, driver_gender, driver_birthday, 
    driver_nationality, driver_nation, driver_marital_status, driver_language_level, 
    driver_education, driver_census, driver_address, driver_contact_address, photo_id, 
    license_photo_id, driver_type, get_driver_license_date, driver_license_off, driver_license_on, 
    taxi_driver, certificate_no, network_car_issue_organization, network_car_issue_date, 
    get_network_car_proof_date, network_car_proof_on, network_car_proof_off, register_date, 
    full_time_driver, in_driver_blacklist, commercial_type, contract_company, contract_on, 
    contract_off, emergency_contact, emergency_contact_phone, emergency_contact_address, 
    state, flag, update_time, reserved
  </sql>
    <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from netcar_base_info_driver
        where company_id = #{companyId,jdbcType=VARCHAR}
        and license_id = #{licenseId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="map">
    delete from netcar_base_info_driver
    where company_id = #{companyId,jdbcType=VARCHAR}
      and license_id = #{licenseId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.zhcx.netcar.pojo.base.NetcarBaseInfoDriver">
    insert into netcar_base_info_driver (company_id, license_id, address, 
      driver_name, driver_phone, driver_gender, 
      driver_birthday, driver_nationality, driver_nation, 
      driver_marital_status, driver_language_level, 
      driver_education, driver_census, driver_address, 
      driver_contact_address, photo_id, license_photo_id, 
      driver_type, get_driver_license_date, driver_license_off, 
      driver_license_on, taxi_driver, certificate_no, 
      network_car_issue_organization, network_car_issue_date, 
      get_network_car_proof_date, network_car_proof_on, 
      network_car_proof_off, register_date, full_time_driver, 
      in_driver_blacklist, commercial_type, contract_company, 
      contract_on, contract_off, emergency_contact, 
      emergency_contact_phone, emergency_contact_address, 
      state, flag, update_time, 
      reserved)
    values (#{companyId,jdbcType=VARCHAR}, #{licenseId,jdbcType=VARCHAR}, #{address,jdbcType=INTEGER}, 
      #{driverName,jdbcType=VARCHAR}, #{driverPhone,jdbcType=VARCHAR}, #{driverGender,jdbcType=VARCHAR}, 
      #{driverBirthday,jdbcType=VARCHAR}, #{driverNationality,jdbcType=VARCHAR}, #{driverNation,jdbcType=VARCHAR}, 
      #{driverMaritalStatus,jdbcType=VARCHAR}, #{driverLanguageLevel,jdbcType=VARCHAR}, 
      #{driverEducation,jdbcType=VARCHAR}, #{driverCensus,jdbcType=VARCHAR}, #{driverAddress,jdbcType=VARCHAR}, 
      #{driverContactAddress,jdbcType=VARCHAR}, #{photoId,jdbcType=VARCHAR}, #{licensePhotoId,jdbcType=VARCHAR}, 
      #{driverType,jdbcType=VARCHAR}, #{getDriverLicenseDate,jdbcType=VARCHAR}, #{driverLicenseOff,jdbcType=VARCHAR}, 
      #{driverLicenseOn,jdbcType=VARCHAR}, #{taxiDriver,jdbcType=INTEGER}, #{certificateNo,jdbcType=VARCHAR}, 
      #{networkCarIssueOrganization,jdbcType=VARCHAR}, #{networkCarIssueDate,jdbcType=VARCHAR}, 
      #{getNetworkCarProofDate,jdbcType=VARCHAR}, #{networkCarProofOn,jdbcType=VARCHAR}, 
      #{networkCarProofOff,jdbcType=VARCHAR}, #{registerDate,jdbcType=VARCHAR}, #{fullTimeDriver,jdbcType=INTEGER}, 
      #{inDriverBlacklist,jdbcType=INTEGER}, #{commercialType,jdbcType=INTEGER}, #{contractCompany,jdbcType=VARCHAR}, 
      #{contractOn,jdbcType=VARCHAR}, #{contractOff,jdbcType=VARCHAR}, #{emergencyContact,jdbcType=VARCHAR}, 
      #{emergencyContactPhone,jdbcType=VARCHAR}, #{emergencyContactAddress,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, #{updateTime,jdbcType=VARCHAR}, 
      #{reserved,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.zhcx.netcar.pojo.base.NetcarBaseInfoDriver">
        insert into netcar_base_info_driver
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="companyId != null">
                company_id,
            </if>
            <if test="licenseId != null">
                license_id,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="driverName != null">
                driver_name,
            </if>
            <if test="driverPhone != null">
                driver_phone,
            </if>
            <if test="driverGender != null">
                driver_gender,
            </if>
            <if test="driverBirthday != null">
                driver_birthday,
            </if>
            <if test="driverNationality != null">
                driver_nationality,
            </if>
            <if test="driverNation != null">
                driver_nation,
            </if>
            <if test="driverMaritalStatus != null">
                driver_marital_status,
            </if>
            <if test="driverLanguageLevel != null">
                driver_language_level,
            </if>
            <if test="driverEducation != null">
                driver_education,
            </if>
            <if test="driverCensus != null">
                driver_census,
            </if>
            <if test="driverAddress != null">
                driver_address,
            </if>
            <if test="driverContactAddress != null">
                driver_contact_address,
            </if>
            <if test="photoId != null">
                photo_id,
            </if>
            <if test="licensePhotoId != null">
                license_photo_id,
            </if>
            <if test="driverType != null">
                driver_type,
            </if>
            <if test="getDriverLicenseDate != null">
                get_driver_license_date,
            </if>
            <if test="driverLicenseOff != null">
                driver_license_off,
            </if>
            <if test="driverLicenseOn != null">
                driver_license_on,
            </if>
            <if test="taxiDriver != null">
                taxi_driver,
            </if>
            <if test="certificateNo != null">
                certificate_no,
            </if>
            <if test="networkCarIssueOrganization != null">
                network_car_issue_organization,
            </if>
            <if test="networkCarIssueDate != null">
                network_car_issue_date,
            </if>
            <if test="getNetworkCarProofDate != null">
                get_network_car_proof_date,
            </if>
            <if test="networkCarProofOn != null">
                network_car_proof_on,
            </if>
            <if test="networkCarProofOff != null">
                network_car_proof_off,
            </if>
            <if test="registerDate != null">
                register_date,
            </if>
            <if test="fullTimeDriver != null">
                full_time_driver,
            </if>
            <if test="inDriverBlacklist != null">
                in_driver_blacklist,
            </if>
            <if test="commercialType != null">
                commercial_type,
            </if>
            <if test="contractCompany != null">
                contract_company,
            </if>
            <if test="contractOn != null">
                contract_on,
            </if>
            <if test="contractOff != null">
                contract_off,
            </if>
            <if test="emergencyContact != null">
                emergency_contact,
            </if>
            <if test="emergencyContactPhone != null">
                emergency_contact_phone,
            </if>
            <if test="emergencyContactAddress != null">
                emergency_contact_address,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="reserved != null">
                reserved,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="companyId != null">
                #{companyId,jdbcType=VARCHAR},
            </if>
            <if test="licenseId != null">
                #{licenseId,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=INTEGER},
            </if>
            <if test="driverName != null">
                #{driverName,jdbcType=VARCHAR},
            </if>
            <if test="driverPhone != null">
                #{driverPhone,jdbcType=VARCHAR},
            </if>
            <if test="driverGender != null">
                #{driverGender,jdbcType=VARCHAR},
            </if>
            <if test="driverBirthday != null">
                #{driverBirthday,jdbcType=VARCHAR},
            </if>
            <if test="driverNationality != null">
                #{driverNationality,jdbcType=VARCHAR},
            </if>
            <if test="driverNation != null">
                #{driverNation,jdbcType=VARCHAR},
            </if>
            <if test="driverMaritalStatus != null">
                #{driverMaritalStatus,jdbcType=VARCHAR},
            </if>
            <if test="driverLanguageLevel != null">
                #{driverLanguageLevel,jdbcType=VARCHAR},
            </if>
            <if test="driverEducation != null">
                #{driverEducation,jdbcType=VARCHAR},
            </if>
            <if test="driverCensus != null">
                #{driverCensus,jdbcType=VARCHAR},
            </if>
            <if test="driverAddress != null">
                #{driverAddress,jdbcType=VARCHAR},
            </if>
            <if test="driverContactAddress != null">
                #{driverContactAddress,jdbcType=VARCHAR},
            </if>
            <if test="photoId != null">
                #{photoId,jdbcType=VARCHAR},
            </if>
            <if test="licensePhotoId != null">
                #{licensePhotoId,jdbcType=VARCHAR},
            </if>
            <if test="driverType != null">
                #{driverType,jdbcType=VARCHAR},
            </if>
            <if test="getDriverLicenseDate != null">
                #{getDriverLicenseDate,jdbcType=VARCHAR},
            </if>
            <if test="driverLicenseOff != null">
                #{driverLicenseOff,jdbcType=VARCHAR},
            </if>
            <if test="driverLicenseOn != null">
                #{driverLicenseOn,jdbcType=VARCHAR},
            </if>
            <if test="taxiDriver != null">
                #{taxiDriver,jdbcType=INTEGER},
            </if>
            <if test="certificateNo != null">
                #{certificateNo,jdbcType=VARCHAR},
            </if>
            <if test="networkCarIssueOrganization != null">
                #{networkCarIssueOrganization,jdbcType=VARCHAR},
            </if>
            <if test="networkCarIssueDate != null">
                #{networkCarIssueDate,jdbcType=VARCHAR},
            </if>
            <if test="getNetworkCarProofDate != null">
                #{getNetworkCarProofDate,jdbcType=VARCHAR},
            </if>
            <if test="networkCarProofOn != null">
                #{networkCarProofOn,jdbcType=VARCHAR},
            </if>
            <if test="networkCarProofOff != null">
                #{networkCarProofOff,jdbcType=VARCHAR},
            </if>
            <if test="registerDate != null">
                #{registerDate,jdbcType=VARCHAR},
            </if>
            <if test="fullTimeDriver != null">
                #{fullTimeDriver,jdbcType=INTEGER},
            </if>
            <if test="inDriverBlacklist != null">
                #{inDriverBlacklist,jdbcType=INTEGER},
            </if>
            <if test="commercialType != null">
                #{commercialType,jdbcType=INTEGER},
            </if>
            <if test="contractCompany != null">
                #{contractCompany,jdbcType=VARCHAR},
            </if>
            <if test="contractOn != null">
                #{contractOn,jdbcType=VARCHAR},
            </if>
            <if test="contractOff != null">
                #{contractOff,jdbcType=VARCHAR},
            </if>
            <if test="emergencyContact != null">
                #{emergencyContact,jdbcType=VARCHAR},
            </if>
            <if test="emergencyContactPhone != null">
                #{emergencyContactPhone,jdbcType=VARCHAR},
            </if>
            <if test="emergencyContactAddress != null">
                #{emergencyContactAddress,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=VARCHAR},
            </if>
            <if test="reserved != null">
                #{reserved,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zhcx.netcar.pojo.base.NetcarBaseInfoDriver">
        update netcar_base_info_driver
        <set>
            <if test="address != null">
                address = #{address,jdbcType=INTEGER},
            </if>
            <if test="driverName != null">
                driver_name = #{driverName,jdbcType=VARCHAR},
            </if>
            <if test="driverPhone != null">
                driver_phone = #{driverPhone,jdbcType=VARCHAR},
            </if>
            <if test="driverGender != null">
                driver_gender = #{driverGender,jdbcType=VARCHAR},
            </if>
            <if test="driverBirthday != null">
                driver_birthday = #{driverBirthday,jdbcType=VARCHAR},
            </if>
            <if test="driverNationality != null">
                driver_nationality = #{driverNationality,jdbcType=VARCHAR},
            </if>
            <if test="driverNation != null">
                driver_nation = #{driverNation,jdbcType=VARCHAR},
            </if>
            <if test="driverMaritalStatus != null">
                driver_marital_status = #{driverMaritalStatus,jdbcType=VARCHAR},
            </if>
            <if test="driverLanguageLevel != null">
                driver_language_level = #{driverLanguageLevel,jdbcType=VARCHAR},
            </if>
            <if test="driverEducation != null">
                driver_education = #{driverEducation,jdbcType=VARCHAR},
            </if>
            <if test="driverCensus != null">
                driver_census = #{driverCensus,jdbcType=VARCHAR},
            </if>
            <if test="driverAddress != null">
                driver_address = #{driverAddress,jdbcType=VARCHAR},
            </if>
            <if test="driverContactAddress != null">
                driver_contact_address = #{driverContactAddress,jdbcType=VARCHAR},
            </if>
            <if test="photoId != null">
                photo_id = #{photoId,jdbcType=VARCHAR},
            </if>
            <if test="licensePhotoId != null">
                license_photo_id = #{licensePhotoId,jdbcType=VARCHAR},
            </if>
            <if test="driverType != null">
                driver_type = #{driverType,jdbcType=VARCHAR},
            </if>
            <if test="getDriverLicenseDate != null">
                get_driver_license_date = #{getDriverLicenseDate,jdbcType=VARCHAR},
            </if>
            <if test="driverLicenseOff != null">
                driver_license_off = #{driverLicenseOff,jdbcType=VARCHAR},
            </if>
            <if test="driverLicenseOn != null">
                driver_license_on = #{driverLicenseOn,jdbcType=VARCHAR},
            </if>
            <if test="taxiDriver != null">
                taxi_driver = #{taxiDriver,jdbcType=INTEGER},
            </if>
            <if test="certificateNo != null">
                certificate_no = #{certificateNo,jdbcType=VARCHAR},
            </if>
            <if test="networkCarIssueOrganization != null">
                network_car_issue_organization = #{networkCarIssueOrganization,jdbcType=VARCHAR},
            </if>
            <if test="networkCarIssueDate != null">
                network_car_issue_date = #{networkCarIssueDate,jdbcType=VARCHAR},
            </if>
            <if test="getNetworkCarProofDate != null">
                get_network_car_proof_date = #{getNetworkCarProofDate,jdbcType=VARCHAR},
            </if>
            <if test="networkCarProofOn != null">
                network_car_proof_on = #{networkCarProofOn,jdbcType=VARCHAR},
            </if>
            <if test="networkCarProofOff != null">
                network_car_proof_off = #{networkCarProofOff,jdbcType=VARCHAR},
            </if>
            <if test="registerDate != null">
                register_date = #{registerDate,jdbcType=VARCHAR},
            </if>
            <if test="fullTimeDriver != null">
                full_time_driver = #{fullTimeDriver,jdbcType=INTEGER},
            </if>
            <if test="inDriverBlacklist != null">
                in_driver_blacklist = #{inDriverBlacklist,jdbcType=INTEGER},
            </if>
            <if test="commercialType != null">
                commercial_type = #{commercialType,jdbcType=INTEGER},
            </if>
            <if test="contractCompany != null">
                contract_company = #{contractCompany,jdbcType=VARCHAR},
            </if>
            <if test="contractOn != null">
                contract_on = #{contractOn,jdbcType=VARCHAR},
            </if>
            <if test="contractOff != null">
                contract_off = #{contractOff,jdbcType=VARCHAR},
            </if>
            <if test="emergencyContact != null">
                emergency_contact = #{emergencyContact,jdbcType=VARCHAR},
            </if>
            <if test="emergencyContactPhone != null">
                emergency_contact_phone = #{emergencyContactPhone,jdbcType=VARCHAR},
            </if>
            <if test="emergencyContactAddress != null">
                emergency_contact_address = #{emergencyContactAddress,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=VARCHAR},
            </if>
            <if test="reserved != null">
                reserved = #{reserved,jdbcType=VARCHAR},
            </if>
        </set>
        where company_id = #{companyId,jdbcType=VARCHAR}
        and license_id = #{licenseId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zhcx.netcar.pojo.base.NetcarBaseInfoDriver">
    update netcar_base_info_driver
    set address = #{address,jdbcType=INTEGER},
      driver_name = #{driverName,jdbcType=VARCHAR},
      driver_phone = #{driverPhone,jdbcType=VARCHAR},
      driver_gender = #{driverGender,jdbcType=VARCHAR},
      driver_birthday = #{driverBirthday,jdbcType=VARCHAR},
      driver_nationality = #{driverNationality,jdbcType=VARCHAR},
      driver_nation = #{driverNation,jdbcType=VARCHAR},
      driver_marital_status = #{driverMaritalStatus,jdbcType=VARCHAR},
      driver_language_level = #{driverLanguageLevel,jdbcType=VARCHAR},
      driver_education = #{driverEducation,jdbcType=VARCHAR},
      driver_census = #{driverCensus,jdbcType=VARCHAR},
      driver_address = #{driverAddress,jdbcType=VARCHAR},
      driver_contact_address = #{driverContactAddress,jdbcType=VARCHAR},
      photo_id = #{photoId,jdbcType=VARCHAR},
      license_photo_id = #{licensePhotoId,jdbcType=VARCHAR},
      driver_type = #{driverType,jdbcType=VARCHAR},
      get_driver_license_date = #{getDriverLicenseDate,jdbcType=VARCHAR},
      driver_license_off = #{driverLicenseOff,jdbcType=VARCHAR},
      driver_license_on = #{driverLicenseOn,jdbcType=VARCHAR},
      taxi_driver = #{taxiDriver,jdbcType=INTEGER},
      certificate_no = #{certificateNo,jdbcType=VARCHAR},
      network_car_issue_organization = #{networkCarIssueOrganization,jdbcType=VARCHAR},
      network_car_issue_date = #{networkCarIssueDate,jdbcType=VARCHAR},
      get_network_car_proof_date = #{getNetworkCarProofDate,jdbcType=VARCHAR},
      network_car_proof_on = #{networkCarProofOn,jdbcType=VARCHAR},
      network_car_proof_off = #{networkCarProofOff,jdbcType=VARCHAR},
      register_date = #{registerDate,jdbcType=VARCHAR},
      full_time_driver = #{fullTimeDriver,jdbcType=INTEGER},
      in_driver_blacklist = #{inDriverBlacklist,jdbcType=INTEGER},
      commercial_type = #{commercialType,jdbcType=INTEGER},
      contract_company = #{contractCompany,jdbcType=VARCHAR},
      contract_on = #{contractOn,jdbcType=VARCHAR},
      contract_off = #{contractOff,jdbcType=VARCHAR},
      emergency_contact = #{emergencyContact,jdbcType=VARCHAR},
      emergency_contact_phone = #{emergencyContactPhone,jdbcType=VARCHAR},
      emergency_contact_address = #{emergencyContactAddress,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=VARCHAR},
      reserved = #{reserved,jdbcType=VARCHAR}
    where company_id = #{companyId,jdbcType=VARCHAR}
      and license_id = #{licenseId,jdbcType=VARCHAR}
  </update>


    <select id="selectDriverList" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from netcar_base_info_driver
        <where>
            <if test="companyId != null">
                and company_id = #{companyId}
            </if>
            <if test="type == 'driverName'">
                and driver_name like CONCAT('%',#{keyword},'%')
            </if>
            <if test="type == 'driverPhone'">
                and driver_phone like CONCAT('%',#{keyword},'%')
            </if>
            <if test="type == 'licenseId'">
                and license_id like CONCAT('%',#{keyword},'%')
            </if>
            and company_id in (select company_id from netcar_base_info_company_service a,yunzheng_base_info_company b
            where a.service_no = b.busiRegNumber)
            and license_id in (select cardno from yunzheng_base_info_driver)
        </where>
    </select>

    <select id="selectDriverInfoByCompanyId" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from netcar_base_info_driver
        <where>
            <if test="companyId != null">
                and company_id = #{companyId}
            </if>
            <if test="companyId = null">
                and company_id in (select company_id from netcar_base_info_company_service )
            </if>
            <if test="licenseId != null">
                and license_id = #{licenseId}
            </if>
            <if test="licenseId == null">
                and license_id in (select idc_num from t_base_info_emp where empl_type = 4)
            </if>
        </where>
    </select>


    <select id="selectIllegalDriverList" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from netcar_base_info_driver t1
        <where>
            <if test="companyId != null">
                and t1.company_id = #{companyId}
            </if>
            <if test="type != null and type == 'driverName' and keyword != null">
                and driver_name like CONCAT(#{keyword},'%')
            </if>
            <if test="type != null and type == 'driverPhone' and keyword != null">
                and driver_phone like CONCAT(#{keyword},'%')
            </if>
            <if test="type != null and type == 'licenseId' and keyword != null">
                and license_id like CONCAT(#{keyword},'%')
            </if>
            and t1.company_id in (
                select company_id
                from netcar_base_info_company_service
            )
            and not exists (
                select company_id
                from yunzheng_base_info_driver t2
                where t1.license_id = t2.cardno
            )
        </where>
    </select>


<!--    <select id="selectDriverExcelList" resultType="com.zhcx.netcarbasic.pojo.excel.DriverExcel" parameterType="map">-->
<!--        select-->
<!--        company_id as companyId,-->
<!--        license_id as licenseId,-->
<!--        address,-->
<!--        driver_name as driverName,-->
<!--        driver_phone as driverPhone,-->
<!--        driver_gender as driverGender,-->
<!--        driver_birthday as driverBirthday,-->
<!--        driver_nationality as driverNationality,-->
<!--        driver_nation as driverNation,-->
<!--        driver_marital_status as driverMaritalStatus,-->
<!--        driver_language_level as driverLanguageLevel,-->
<!--        driver_education as driverEducation,-->
<!--        driver_census as driverCensus,-->
<!--        driver_address as driverAddress,-->
<!--        driver_contact_address as driverContactAddress,-->
<!--        photo_id as photoId,-->
<!--        license_photo_id as licensePhotoId,-->
<!--        driver_type as driverType,-->
<!--        get_driver_license_date as getDriverLicenseDate,-->
<!--        driver_license_off as driverLicenseOff,-->
<!--        driver_license_on as driverLicenseOn,-->
<!--        taxi_driver as taxiDriver,-->
<!--        certificate_no as certificateNo,-->
<!--        network_car_issue_organization as networkCarIssueOrganization,-->
<!--        network_car_issue_date as networkCarIssueDate,-->
<!--        get_network_car_proof_date as getNetworkCarProofDate,-->
<!--        network_car_proof_on as networkCarProofOn,-->
<!--        network_car_proof_off as networkCarProofOff,-->
<!--        register_date as registerDate,-->
<!--        full_time_driver as fullTimeDriver,-->
<!--        in_driver_blacklist as inDriverBlacklist,-->
<!--        commercial_type as commercialType,-->
<!--        contract_company as contractCompany,-->
<!--        contract_on as contractOn,-->
<!--        contract_off as contractOff,-->
<!--        emergency_contact as emergencyContact,-->
<!--        emergency_contact_phone as emergencyContactPhone,-->
<!--        emergency_contact_address as emergencyContactAddress,-->
<!--        state,-->
<!--        flag,-->
<!--        update_time as updateTime-->
<!--        from netcar_base_info_driver-->
<!--        <where>-->
<!--            <if test="companyId != null">-->
<!--                and company_id = #{companyId}-->
<!--            </if>-->
<!--            <if test="type == 'driverName'">-->
<!--                and driver_name like CONCAT('%',#{keyword},'%')-->
<!--            </if>-->
<!--            <if test="type == 'driverPhone'">-->
<!--                and driver_phone like CONCAT('%',#{keyword},'%')-->
<!--            </if>-->
<!--            <if test="type == 'licenseId'">-->
<!--                and license_id like CONCAT('%',#{keyword},'%')-->
<!--            </if>-->
<!--            and company_id in (select company_id from netcar_base_info_company_service a,yunzheng_base_info_company b-->
<!--            where a.service_no = b.busiRegNumber)-->
<!--            and license_id in (select cardno from yunzheng_base_info_driver)-->
<!--        </where>-->
<!--    </select>-->

    <select id="getDriverIllegal" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM netcar_base_info_driver as netcar
        <where>
            NOT exists(
            SELECT service.company_id
            from netcar_base_info_company_service as service
            WHERE netcar.company_id = service.company_id
            )
            <if test="companyId != null and companyId != ''">
                and netcar.company_id = #{companyId}
            </if>
            <if test="keyword != null and keyword != '' and type == 'driverName'">
                and netcar.driver_name like concat('%',#{keyword},'%')
            </if>
            <if test="keyword != null and keyword != '' and type == 'driverPhone'">
                and netcar.driver_phone like concat('%',#{keyword},'%')
            </if>
            <if test="keyword != null and keyword != '' and type == 'licenseId'">
                and netcar.license_id like concat('%',#{keyword},'%')
            </if>
        </where>
    </select>

    <update id="updateBatchEmpl">
        <foreach collection="emplList" item="item" index="index" separator=" ;">
            update t_base_info_empl
            <set>
                <if test="item.corpId != null">
                    corp_id = #{item.corpId},
                </if>
                <if test="item.name != null">
                    name = #{item.name},
                </if>
                <if test="item.gender != null">
                    gender = #{item.gender},
                </if>
                <if test="item.birthDate != null">
                    birth_date = #{item.birthDate},
                </if>
                <if test="item.idcType != null">
                    idc_type = #{item.idcType},
                </if>
                <if test="item.idcNum != null">
                    idc_num = #{item.idcNum},
                </if>
                <if test="item.degreeCode != null">
                    degree_code = #{item.degreeCode},
                </if>
                <if test="item.phoneNo != null">
                    phone_no = #{item.phoneNo},
                </if>
                <if test="item.emergencyContact != null">
                    emergency_contact = #{item.emergencyContact},
                </if>
                <if test="item.emergencyContactPhone != null">
                    emergency_contact_phone = #{item.emergencyContactPhone},
                </if>
                <if test="item.emergencyContactAddress != null">
                    emergency_contact_address = #{item.emergencyContactAddress},
                </if>
                <if test="item.presentAddr != null">
                    present_addr = #{item.presentAddr},
                </if>
                <if test="item.effStartTime != null">
                    eff_start_time = #{item.effStartTime},
                </if>
                <if test="item.effEndTime != null">
                    eff_end_time = #{item.effEndTime},
                </if>
                <if test="item.timeModified != null">
                    time_modified = #{item.timeModified},
                </if>
                <if test="item.source != null">
                    source = #{item.source},
                </if>
            </set>
            where uuid = #{item.uuid}
        </foreach>
    </update>

    <insert id="saveBatchEmpl">
        insert into t_base_info_empl (uuid, corp_id, name, gender, idc_num, phone_no, present_addr, source, bind_status,
        status,empl_type,time_created,time_modified,license_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.uuid,jdbcType=BIGINT}, #{item.corpId,jdbcType=BIGINT},
            #{item.name,jdbcType=VARCHAR}, #{item.gender,jdbcType=VARCHAR},
            #{item.idcNum,jdbcType=VARCHAR}, #{item.phoneNo,jdbcType=VARCHAR},
            #{item.presentAddr,jdbcType=VARCHAR},#{item.source,jdbcType=SMALLINT},
            #{item.bindStatus,jdbcType=VARCHAR},#{item.status,jdbcType=SMALLINT},
            #{item.emplType,jdbcType=VARCHAR},#{item.timeCreated},
            #{item.timeModified},#{item.licenseId}
            )
        </foreach>
    </insert>
</mapper>