<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhcx.netcar.netcarservice.mapper.base.NetcarOperateArriveMapper">
  <resultMap id="BaseResultMap" type="com.zhcx.netcar.pojo.base.NetcarOperateArrive">
    <id column="company_id" jdbcType="VARCHAR" property="companyId" />
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="dest_longitude" jdbcType="DOUBLE" property="destLongitude" />
    <result column="dest_latitude" jdbcType="DOUBLE" property="destLatitude" />
    <result column="encrypt" jdbcType="INTEGER" property="encrypt" />
    <result column="dest_time" jdbcType="VARCHAR" property="destTime" />
    <result column="drive_mile" jdbcType="DOUBLE" property="driveMile" />
    <result column="drive_time" jdbcType="INTEGER" property="driveTime" />
    <result column="reserved" jdbcType="VARCHAR" property="reserved" />
  </resultMap>
  <sql id="Base_Column_List">
    company_id, order_id, dest_longitude, dest_latitude, encrypt, dest_time, drive_mile, 
    drive_time, reserved
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from netcar_operate_arrive
    where company_id = #{companyId,jdbcType=VARCHAR}
      and order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from netcar_operate_arrive
    where company_id = #{companyId,jdbcType=VARCHAR}
      and order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zhcx.netcar.pojo.base.NetcarOperateArrive">
    insert into netcar_operate_arrive (company_id, order_id, dest_longitude, 
      dest_latitude, encrypt, dest_time, 
      drive_mile, drive_time, reserved
      )
    values (#{companyId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{destLongitude,jdbcType=DOUBLE}, 
      #{destLatitude,jdbcType=DOUBLE}, #{encrypt,jdbcType=INTEGER}, #{destTime,jdbcType=VARCHAR}, 
      #{driveMile,jdbcType=DOUBLE}, #{driveTime,jdbcType=INTEGER}, #{reserved,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhcx.netcar.pojo.base.NetcarOperateArrive">
    insert into netcar_operate_arrive
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="destLongitude != null">
        dest_longitude,
      </if>
      <if test="destLatitude != null">
        dest_latitude,
      </if>
      <if test="encrypt != null">
        encrypt,
      </if>
      <if test="destTime != null">
        dest_time,
      </if>
      <if test="driveMile != null">
        drive_mile,
      </if>
      <if test="driveTime != null">
        drive_time,
      </if>
      <if test="reserved != null">
        reserved,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="destLongitude != null">
        #{destLongitude,jdbcType=DOUBLE},
      </if>
      <if test="destLatitude != null">
        #{destLatitude,jdbcType=DOUBLE},
      </if>
      <if test="encrypt != null">
        #{encrypt,jdbcType=INTEGER},
      </if>
      <if test="destTime != null">
        #{destTime,jdbcType=VARCHAR},
      </if>
      <if test="driveMile != null">
        #{driveMile,jdbcType=DOUBLE},
      </if>
      <if test="driveTime != null">
        #{driveTime,jdbcType=INTEGER},
      </if>
      <if test="reserved != null">
        #{reserved,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhcx.netcar.pojo.base.NetcarOperateArrive">
    update netcar_operate_arrive
    <set>
      <if test="destLongitude != null">
        dest_longitude = #{destLongitude,jdbcType=DOUBLE},
      </if>
      <if test="destLatitude != null">
        dest_latitude = #{destLatitude,jdbcType=DOUBLE},
      </if>
      <if test="encrypt != null">
        encrypt = #{encrypt,jdbcType=INTEGER},
      </if>
      <if test="destTime != null">
        dest_time = #{destTime,jdbcType=VARCHAR},
      </if>
      <if test="driveMile != null">
        drive_mile = #{driveMile,jdbcType=DOUBLE},
      </if>
      <if test="driveTime != null">
        drive_time = #{driveTime,jdbcType=INTEGER},
      </if>
      <if test="reserved != null">
        reserved = #{reserved,jdbcType=VARCHAR},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=VARCHAR}
      and order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhcx.netcar.pojo.base.NetcarOperateArrive">
    update netcar_operate_arrive
    set dest_longitude = #{destLongitude,jdbcType=DOUBLE},
      dest_latitude = #{destLatitude,jdbcType=DOUBLE},
      encrypt = #{encrypt,jdbcType=INTEGER},
      dest_time = #{destTime,jdbcType=VARCHAR},
      drive_mile = #{driveMile,jdbcType=DOUBLE},
      drive_time = #{driveTime,jdbcType=INTEGER},
      reserved = #{reserved,jdbcType=VARCHAR}
    where company_id = #{companyId,jdbcType=VARCHAR}
      and order_id = #{orderId,jdbcType=VARCHAR}
  </update>



    <!--查询条件searchType = licenseId-->
    <select id="queryOperateArriveListByCondition" parameterType="com.zhcx.netcar.params.OperateParam" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from netcar_operate_arrive
        <where>
<!--            and company_id in (select company_id from netcar_base_info_company_service a,yunzheng_base_info_company b where a.service_no = b.busiRegNumber)-->
            <if test="companyId != null">
                and company_id = #{companyId}
            </if>
            <if test="keyword != null">
                and order_id like concat(#{keyword},'%')
            </if>
            <if test="startTime != null and endTime != null">
                and dest_time between date_format(#{startTime},'%Y%m%d%H%i%s')
                and date_format(#{endTime},'%Y%m%d%H%i%s')
            </if>
        </where>
    </select>

</mapper>